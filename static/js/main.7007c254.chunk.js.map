{"version":3,"sources":["Content/feelings.mp3","logo.svg","Button.js","Player.js","Title.js","Pedal.js","Toggle.js","Layout.js","Led.js","Chorus.js","Overdrive.js","Reverb.js","Delay.js","AutoWah.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","styled","button","_templateObject","Play","Player_templateObject","Stop","_templateObject2","Mic","_templateObject3","Player","props","_useState","useState","_useState2","Object","slicedToArray","playing","setPlaying","_useState3","_useState4","micOn","setMicOn","react_default","a","createElement","onClick","player","start","stop","mic","close","console","log","open","Title","Pedal","div","Pedal_templateObject","Toggle","Toggle_templateObject","FlexDiv","Layout_templateObject","ControlContainer","Layout_templateObject2","Layout_templateObject3","Off","Led_templateObject","On","Led_templateObject2","Chorus","Chorus_templateObject","Knob","knob","Chorus_templateObject2","ChorusPedal","connected","setConnected","Chorus_Knob","name","class","onChange","event","chorus","delayTime","min","max","step","value","depth","frequency","Layout_Title","src_Toggle","disconnect","connect","Overdrive","Overdrive_templateObject","Overdrive_templateObject2","OverdrivePedal","Overdrive_Knob","overdrive","distortion","bit","bits","Reverb","Reverb_templateObject","Reverb_templateObject2","ReverbPedal","Reverb_Knob","reverb","wet","roomSize","Delay","Delay_templateObject","Delay_templateObject2","DelayPedal","Delay_Knob","delay","feedback","AutoWah","AutoWah_templateObject","AutoWah_templateObject2","WahPedal","AutoWah_Knob","wah","baseFrequency","octaves","senitivity","Q","Board","App_templateObject","App","Tone","mp3","toMaster","UserMedia","Distortion","BitCrusher","Freeverb","PingPongDelay","className","src_Title","src_Chorus","src_Overdrive","src_Delay","src_Reverb","src_AutoWah","src_Player","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7007c254.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feelings.75e4829b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-size: 18px;\n  font-family: AppleGothic;\n  border-radius: 15px;\n\n  color: white;\n  padding: 1em;\n  text-align: center;\n  margin: 10px;\n  &:hover {\n    box-shadow: 0px 0px 10px black;\n  }\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport Tone from \"tone\";\n\nconst Play = styled(Button)`\n  background-color: green;\n`;\n\nconst Stop = styled(Button)`\n  background-color: Red;\n`;\n\nconst Mic = styled(Button)`\n  background-color: Blue;\n`;\n\nconst Player = props => {\n  const [playing, setPlaying] = useState(false);\n  const [micOn, setMicOn] = useState(false);\n\n  const handlePlay = () => {\n    props.player.start();\n    setPlaying(true);\n  };\n  const handleStop = () => {\n    if (playing) {\n      props.player.stop();\n      setPlaying(false);\n    }\n  };\n\n  const handleMic = () => {\n    if (micOn) {\n      props.mic.close();\n      setMicOn(false);\n      console.log(\"trying to turn the mic input off\");\n    } else {\n      props.mic.open();\n      setMicOn(true);\n    }\n  };\n  return (\n    <div>\n      <Play onClick={handlePlay}>Play</Play>\n      <Stop onClick={handleStop}>Stop</Stop>\n      <Mic onClick={handleMic}>Mic</Mic>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div>\n      <h1>React FX</h1>\n    </div>\n  );\n};\n\nexport default Title;\n","import styled from \"styled-components\";\n\nconst Pedal = styled.div`\n  font-size: 18px;\n  font-family: AppleGothic;\n  border-radius: 15px;\n  height: 300px;\n  width: 160px;\n  color: white;\n  padding: 1em;\n  text-align: center;\n  margin: 20px;\n  position: relative;\n  box-shadow: -2px -1px 63px 10px rgba(0, 0, 0, 1);\n  box-shadow: 0px 0px 2px 0px rgba(255, 255, 255, 1);\n`;\n\nexport default Pedal;\n","import styled from \"styled-components\";\n\nconst Toggle = styled.button`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 10px;\n  left: 40%;\n  right: 40%;\n  &:focus {\n    outline: 0;\n  }\n  &:active {\n    box-shadow: 0px 0px 4px black;\n  }\n`;\n\nexport default Toggle;\n","import styled from \"styled-components\";\n\nexport const FlexDiv = styled.div`\n  flex: 0 0 50%;\n`;\n\nexport const ControlContainer = styled.div`\n  display: flex;\n  font-size: 12px;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  height: 138px;\n`;\n\nexport const Title = styled.div`\n  font-size: 18px;\n  margin-top: 20px;\n  text-align: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Off = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 50px;\n  left: 85px\n  background-color: grey;\n  box-shadow: 0px 0px 2px 0px rgba(245,245,242,1);\n`;\nexport const On = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 50px;\n  left: 85px;\n  box-shadow: 0px 0px 2px 0px rgba(245, 245, 242, 1);\n\n  background-color: red;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\n\nconst Chorus = styled(Pedal)`\n  background: rgb(33, 80, 223);\n  background: linear-gradient(\n    180deg,\n    rgba(33, 80, 223, 1) 0%,\n    rgba(76, 145, 235, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst ChorusPedal = props => {\n  const [connected, setConnected] = useState(false);\n\n  const handleToggleOn = () => {\n    if (connected) {\n      props.player.disconnect(props.chorus);\n      props.mic.disconnect(props.chorus);\n      setConnected(false);\n    } else {\n      props.player.connect(props.chorus);\n      props.mic.connect(props.chorus);\n      setConnected(true);\n    }\n  };\n\n  const handleDelayTime = event => {\n    props.chorus.delayTime = event;\n  };\n\n  const handleDepth = event => {\n    props.chorus.depth = event;\n  };\n\n  const handleFreq = event => {\n    props.chorus.frequency.value = event;\n  };\n  return (\n    <Chorus>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            name={\"delay\"}\n            class={\"my-knob-class\"}\n            onChange={handleDelayTime}\n            min={0}\n            max={5}\n            step={0.1}\n            value={1.5}\n          />\n          Delay\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleDepth}\n            min={0}\n            max={5}\n            step={0.1}\n            value={1.5}\n          />\n          Depth\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            name={\"frequency\"}\n            class={\"my-knob-class\"}\n            onChange={handleFreq}\n            min={0}\n            max={5}\n            step={0.1}\n            value={1.5}\n          />\n          Frequency\n        </FlexDiv>\n      </ControlContainer>\n      <Title> Chorus </Title>\n      {connected ? <On /> : <Off />}\n      <Toggle onClick={handleToggleOn} />\n    </Chorus>\n  );\n};\n\nexport default ChorusPedal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\n\nconst Overdrive = styled(Pedal)`\n  background: rgb(186, 18, 18);\n  background: linear-gradient(\n    180deg,\n    rgba(186, 18, 18, 1) 0%,\n    rgba(235, 76, 76, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst OverdrivePedal = props => {\n  const [connected, setConnected] = useState(false);\n\n  const handleToggleOn = () => {\n    if (connected) {\n      props.player.disconnect(props.overdrive);\n      props.player.disconnect(props.bit);\n      props.mic.disconnect(props.overdrive);\n      props.mic.disconnect(props.bit);\n      setConnected(false);\n    } else {\n      props.player.connect(props.overdrive);\n      props.player.connect(props.bit);\n      props.mic.connect(props.overdrive);\n      props.mic.connect(props.bit);\n      setConnected(true);\n    }\n  };\n  const handleGain = event => {\n    console.log(\"props.overdrive :\", props.overdrive);\n    props.overdrive.distortion = event;\n  };\n  const handleBit = event => {\n    props.bit.bits = event;\n  };\n\n  return (\n    <Overdrive>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleGain}\n            min={0.1}\n            max={6}\n            step={0.1}\n            value={1.5}\n          />\n          Gain\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleBit}\n            min={1}\n            max={8}\n            step={0.1}\n            value={8}\n          />\n          Bits\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Overdrive</Title>\n      {connected ? <On /> : <Off />}\n      <Toggle onClick={handleToggleOn} />\n    </Overdrive>\n  );\n};\n\nexport default OverdrivePedal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\n\nconst Reverb = styled(Pedal)`\n  background: rgb(73, 72, 72);\n  background: linear-gradient(\n    357deg,\n    rgba(73, 72, 72, 1) 0%,\n    rgba(33, 33, 33, 1) 100%\n  );\n`;\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst ReverbPedal = props => {\n  const [connected, setConnected] = useState(false);\n\n  const handleDryWet = event => {\n    props.reverb.wet.value = event;\n  };\n  const handleSize = event => {\n    props.reverb.roomSize.value = event;\n  };\n\n  const handleToggleOn = () => {\n    if (connected) {\n      props.player.disconnect(props.reverb);\n      props.mic.disconnect(props.reverb);\n      setConnected(false);\n    } else {\n      props.player.connect(props.reverb);\n      props.mic.connect(props.reverb);\n      setConnected(true);\n    }\n  };\n  return (\n    <Reverb>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleDryWet}\n            min={0}\n            max={1}\n            step={0.01}\n            value={0.8}\n          />\n          Dry/Wet\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleSize}\n            min={0}\n            max={1}\n            step={0.01}\n            value={0.8}\n          />\n          Decay\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Reverb</Title>\n      {connected ? <On /> : <Off />}\n      <Toggle onClick={handleToggleOn}> </Toggle>\n    </Reverb>\n  );\n};\n\nexport default ReverbPedal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\n\nconst Delay = styled(Pedal)`\n  background: rgb(0, 71, 24);\n  background: linear-gradient(\n    0deg,\n    rgba(0, 71, 24, 1) 0%,\n    rgba(9, 34, 0, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst DelayPedal = props => {\n  const [connected, setConnected] = useState(false);\n  const handleToggleOn = () => {\n    if (connected) {\n      props.player.disconnect(props.delay);\n      props.mic.disconnect(props.delay);\n      setConnected(false);\n    } else {\n      props.player.connect(props.delay);\n      props.mic.connect(props.delay);\n      setConnected(true);\n    }\n  };\n\n  const handleDelayTime = event => {\n    props.delay.delayTime.value = event;\n  };\n\n  const handleFeedback = event => {\n    props.delay.feedback.value = event;\n  };\n\n  const handleDryWet = event => {\n    props.delay.wet.value = event;\n  };\n\n  return (\n    <Delay>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleDelayTime}\n            min={0}\n            max={1}\n            step={0.1}\n            value={0.25}\n          />\n          Delay Time\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleFeedback}\n            min={0}\n            max={1}\n            step={0.1}\n            value={0.25}\n          />\n          Feedback\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onChange={handleDryWet}\n            min={0}\n            max={1}\n            step={0.01}\n            value={0.8}\n          />\n          Dry/Wet\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Ping-Pong</Title>\n      {connected ? <On /> : <Off />}\n      <Toggle onClick={handleToggleOn} />\n    </Delay>\n  );\n};\n\nexport default DelayPedal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\n\nconst AutoWah = styled(Pedal)`\n  background: rgb(55, 0, 60);\n  background: linear-gradient(\n    176deg,\n    rgba(55, 0, 60, 1) 0%,\n    rgba(31, 0, 34, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst WahPedal = props => {\n  const [connected, setConnected] = useState(false);\n\n  const handleToggleOn = () => {\n    if (connected) {\n      props.player.disconnect(props.wah);\n      props.mic.disconnect(props.wah);\n      setConnected(false);\n    } else {\n      props.player.connect(props.wah);\n      props.mic.connect(props.wah);\n      setConnected(true);\n      props.wah.Q.value = 6;\n    }\n  };\n  const handleFreq = event => {\n    props.wah.baseFrequency = event;\n  };\n  const handleOctaves = event => {\n    props.wah.octaves = event;\n  };\n  const handleSens = event => {\n    props.wah.senitivity = event;\n  };\n  return (\n    <AutoWah>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            name={\"delay\"}\n            class={\"my-knob-class\"}\n            onChange={handleFreq}\n            min={1}\n            max={200}\n            step={1}\n            value={100}\n          />\n          Freq\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            name={\"octave\"}\n            class={\"my-knob-class\"}\n            onChange={handleOctaves}\n            min={1}\n            max={8}\n            step={1}\n            value={6}\n          />\n          Octaves\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            name={\"sensitivity\"}\n            class={\"my-knob-class\"}\n            onChange={handleSens}\n            min={-40}\n            max={0}\n            step={1}\n            value={0}\n          />\n          Sensitivity\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Auto-Wah</Title>\n      {connected ? <On /> : <Off />}\n      <Toggle onClick={handleToggleOn} />\n    </AutoWah>\n  );\n};\n\nexport default WahPedal;\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Tone from \"tone\";\nimport Player from \"./Player\";\nimport mp3 from \"./Content/feelings.mp3\";\nimport Title from \"./Title\";\nimport styled from \"styled-components\";\nimport Chorus from \"./Chorus\";\nimport Overdrive from \"./Overdrive\";\nimport Reverb from \"./Reverb\";\nimport Delay from \"./Delay\";\nimport Wah from \"./AutoWah\";\n\nconst Board = styled.div`\n  display: flex;\n`;\nfunction App() {\n  const player = new Tone.Player(mp3).toMaster();\n  const mic = new Tone.UserMedia().toMaster();\n  // mic.open().then(function() {\n  //   console.log(\"connected to microphone\");\n  // });\n  const chorus = new Tone.Chorus(1.5, 4.5, 0.7).toMaster();\n\n  const overdrive = new Tone.Distortion(0.4).toMaster();\n  const bit = new Tone.BitCrusher(8).toMaster();\n  const reverb = new Tone.Freeverb(0.8).toMaster();\n  const delay = new Tone.PingPongDelay(0.25, 0.5).toMaster();\n  const wah = new Tone.AutoWah(100, 6, 0).toMaster();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Title />\n        <Board>\n          <Chorus player={player} chorus={chorus} mic={mic} />\n          <Overdrive\n            player={player}\n            mic={mic}\n            overdrive={overdrive}\n            bit={bit}\n          />\n          <Delay player={player} mic={mic} delay={delay} />\n          <Reverb player={player} mic={mic} reverb={reverb} />\n          <Wah player={player} mic={mic} wah={wah} />\n        </Board>\n        <Player player={player} mic={mic} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}