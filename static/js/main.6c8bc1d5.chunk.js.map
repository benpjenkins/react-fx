{"version":3,"sources":["Button.js","context/PedalProvider.js","tone/Audio.js","Player.js","Title.js","Pedal.js","Toggle.js","Layout.js","Led.js","Chorus.js","Overdrive.js","Reverb.js","Delay.js","AutoWah.js","App.js","serviceWorker.js","index.js","Content/feelings.mp3"],"names":["Button","styled","button","_templateObject","PedalContext","React","createContext","reducer","state","action","type","Object","objectSpread","defineProperty","pedal","pot","value","active","isPlaying","playing","audioSource","source","initialState","chorus","order","delayTime","depth","frequency","overdrive","distortion","delay","feedback","wet","reverb","roomSize","wah","baseFrequency","octaves","sensitivity","PedalProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","children","player","Tone","Player","mp3","Chorus","Freeverb","PingPongDelay","AutoWah","Distortion","chain","Master","mic","UserMedia","chorusMic","reverbMic","delayMic","wahMic","overdriveMic","alreadyPlaying","Play","Player_templateObject","Stop","_templateObject2","Mic","_templateObject3","_useContext","useContext","useEffect","console","log","close","start","stop","open","handleStateChange","onClick","Title","Pedal","div","Pedal_templateObject","Toggle","Toggle_templateObject","FlexDiv","Layout_templateObject","ControlContainer","Layout_templateObject2","Layout_templateObject3","Off","Led_templateObject","On","Led_templateObject2","Chorus_templateObject","Knob","knob","Chorus_templateObject2","ChorusPedal","Chorus_Knob","name","class","onEnd","event","min","max","step","Layout_Title","src_Toggle","Overdrive","Overdrive_templateObject","Overdrive_templateObject2","OverdrivePedal","Overdrive_Knob","Reverb","Reverb_templateObject","Reverb_templateObject2","ReverbPedal","Reverb_Knob","Delay","Delay_templateObject","Delay_templateObject2","DelayPedal","Delay_Knob","AutoWah_templateObject","AutoWah_templateObject2","WahPedal","AutoWah_Knob","Board","App_templateObject","App","className","context_PedalProvider","src_Title","src_Chorus","src_Overdrive","src_Delay","src_Reverb","src_AutoWah","src_Player","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6c8bc1d5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-size: 18px;\n  font-family: AppleGothic;\n  border-radius: 15px;\n\n  color: white;\n  padding: 1em;\n  text-align: center;\n  margin: 10px;\n  &:hover {\n    box-shadow: 0px 0px 10px black;\n  }\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport default Button;\n","import React, { useReducer } from \"react\";\n\nexport const PedalContext = React.createContext();\n\nconst SET_POT = \"SET_POT\";\nconst TOGGLE_ACTIVE = \"TOGGLE_ACTIVE\";\nconst SET_PLAYING = \"SET_PLAYING\";\nconst SET_SOURCE = \"SET_SOURCE\";\n\nexport const setPot = (pot, pedal) => ({\n  type: SET_POT,\n  pot,\n  pedal\n});\n\nexport const toggleActive = pedal => ({\n  type: TOGGLE_ACTIVE,\n  pedal\n});\n\nexport const setPlaying = playing => ({\n  type: SET_PLAYING,\n  playing\n});\n\nexport const setSource = source => ({\n  type: SET_SOURCE,\n  source\n});\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_POT\":\n      return {\n        ...state,\n        [action.pedal]: {\n          ...state[action.pedal],\n          [action.pot]: action.value\n        }\n      };\n    case \"TOGGLE_ACTIVE\":\n      return {\n        ...state,\n        [action.pedal]: {\n          ...state[action.pedal],\n          active: !state[action.pedal].active\n        }\n      };\n    //CHANGE_ORDER\n    case \"SET_PLAYING\":\n      return { ...state, isPlaying: action.playing };\n    case \"SET_SOURCE\":\n      return { ...state, audioSource: action.source };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  isPlaying: false,\n  audioSource: null,\n  chorus: {\n    order: 1,\n    active: false,\n    delayTime: 1.5,\n    depth: 1.5,\n    frequency: 1.5\n  },\n  overdrive: {\n    order: 2,\n    active: false,\n    distortion: 1\n  },\n  delay: {\n    order: 3,\n    active: false,\n    delayTime: 0.25,\n    feedback: 0.25,\n    wet: 0.8\n  },\n  reverb: {\n    order: 4,\n    active: false,\n    wet: 0.8,\n    roomSize: 0.8\n  },\n  wah: {\n    order: 5,\n    active: false,\n    baseFrequency: 100,\n    octaves: 6,\n    sensitivity: 0\n  }\n};\n\nconst PedalProvider = props => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <PedalContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </PedalContext.Provider>\n  );\n};\n\nexport default PedalProvider;\n","// import { useRef } from \"react\";\nimport Tone from \"tone\";\nimport mp3 from \"../Content/feelings.mp3\";\n\nconst player = new Tone.Player(mp3);\nconst chorus = new Tone.Chorus(1.5, 4.5, 0.7);\nconst reverb = new Tone.Freeverb(0.8);\nconst delay = new Tone.PingPongDelay(0.25, 0.5);\nconst wah = new Tone.AutoWah(100, 6, 0);\nconst overdrive = new Tone.Distortion(0.4);\n\nplayer.chain(overdrive, chorus, reverb, delay, wah, Tone.Master);\n\nconst mic = new Tone.UserMedia();\nconst chorusMic = new Tone.Chorus(1.5, 4.5, 0.7);\nconst reverbMic = new Tone.Freeverb(0.8);\nconst delayMic = new Tone.PingPongDelay(0.25, 0.5);\nconst wahMic = new Tone.AutoWah(100, 6, 0);\nconst overdriveMic = new Tone.Distortion(0.4);\nmic.chain(overdriveMic, chorusMic, reverbMic, delayMic, wahMic, Tone.Master);\n\nlet activeSource;\nlet alreadyPlaying = false;\nexport const handleStateChange = state => {\n  if (state.audioSource === null) {\n    activeSource = player;\n  }\n  //update the value for each parameter on each effect\n  chorus.delayTime = state.chorus.delayTime;\n  chorus.depth = state.chorus.depth;\n  chorus.frequency.value = state.chorus.frequency;\n  chorus.wet.value = 100;\n\n  overdrive.distortion = state.overdrive.distortion;\n  overdrive.wet.value = 50;\n\n  delay.delayTime.value = state.delay.delayTime;\n  delay.feedback.value = state.delay.feedback;\n  delay.wet.value = state.delay.wet;\n\n  reverb.wet.value = state.reverb.wet;\n  reverb.roomSize.value = state.reverb.roomSize;\n\n  wah.baseFrequency = state.wah.baseFrequency;\n  wah.octaves = state.wah.octaves;\n  wah.wet.value = 100;\n\n  chorusMic.delayTime = state.chorus.delayTime;\n  chorusMic.depth = state.chorus.depth;\n  chorusMic.frequency.value = state.chorus.frequency;\n  chorusMic.wet.value = 100;\n\n  overdriveMic.distortion = state.overdrive.distortion;\n  overdriveMic.wet.value = 50;\n\n  delayMic.delayTime.value = state.delay.delayTime;\n  delayMic.feedback.value = state.delay.feedback;\n  delayMic.wet.value = state.delay.wet;\n\n  reverbMic.wet.value = state.reverb.wet;\n  reverb.roomSize.value = state.reverb.roomSize;\n\n  wahMic.baseFrequency = state.wah.baseFrequency;\n  wahMic.octaves = state.wah.octaves;\n  wahMic.wet.value = 100;\n\n  if (!state.chorus.active) chorus.wet.value = 0;\n  if (!state.overdrive.active) overdrive.wet.value = 0;\n  if (!state.delay.active) delay.wet.value = 0;\n  if (!state.reverb.active) reverb.wet.value = 0;\n  if (!state.wah.active) wah.wet.value = 0;\n\n  if (!state.chorus.active) chorusMic.wet.value = 0;\n  if (!state.overdrive.active) overdriveMic.wet.value = 0;\n  if (!state.delay.active) delayMic.wet.value = 0;\n  if (!state.reverb.active) reverbMic.wet.value = 0;\n  if (!state.wah.active) wahMic.wet.value = 0;\n\n  //start making some noise\n  if (state.isPlaying) {\n    console.log(\"state :\", state);\n    if (state.audioSource === \"mp3\") {\n      mic.close();\n      if (!alreadyPlaying) {\n        player.start();\n        alreadyPlaying = true;\n      }\n    } else if (state.audioSource === \"mic\") {\n      player.stop();\n      if (!alreadyPlaying) {\n        mic.open();\n        alreadyPlaying = true;\n      }\n    }\n  } else {\n    mic.close();\n    player.stop();\n    alreadyPlaying = false;\n  }\n};\n","import React, { useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport Tone from \"tone\";\nimport mp3 from \"./Content/feelings.mp3\";\nimport { PedalContext } from \"./context/PedalProvider\";\nimport { handleStateChange } from \"./tone/Audio\";\n\nconst Play = styled(Button)`\n  background-color: green;\n`;\n\nconst Stop = styled(Button)`\n  background-color: Red;\n`;\n\nconst Mic = styled(Button)`\n  background-color: Blue;\n`;\n\nconst Player = props => {\n  const { state, dispatch } = useContext(PedalContext);\n\n  useEffect(() => {\n    handleStateChange(state);\n  });\n\n  return (\n    <div>\n      <Play\n        onClick={() =>\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true\n          })\n        }\n      >\n        Play\n      </Play>\n      <Stop\n        onClick={() =>\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: false\n          })\n        }\n      >\n        Stop\n      </Stop>\n      <Mic\n        onClick={() =>\n          dispatch({\n            type: \"SET_SOURCE\",\n            source: \"mic\"\n          })\n        }\n      >\n        Use Mic\n      </Mic>\n      <Mic\n        onClick={() =>\n          dispatch({\n            type: \"SET_SOURCE\",\n            source: \"mp3\"\n          })\n        }\n      >\n        Use MP3\n      </Mic>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div>\n      <h1>React FX</h1>\n    </div>\n  );\n};\n\nexport default Title;\n","import styled from \"styled-components\";\n\nconst Pedal = styled.div`\n  font-size: 18px;\n  font-family: AppleGothic;\n  border-radius: 15px;\n  height: 300px;\n  width: 160px;\n  color: white;\n  padding: 1em;\n  text-align: center;\n  margin: 20px;\n  position: relative;\n  box-shadow: -2px -1px 63px 10px rgba(0, 0, 0, 1);\n  box-shadow: 0px 0px 2px 0px rgba(255, 255, 255, 1);\n`;\n\nexport default Pedal;\n","import styled from \"styled-components\";\n\nconst Toggle = styled.button`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 10px;\n  left: 40%;\n  right: 40%;\n  &:focus {\n    outline: 0;\n  }\n  &:active {\n    box-shadow: 0px 0px 4px black;\n  }\n`;\n\nexport default Toggle;\n","import styled from \"styled-components\";\n\nexport const FlexDiv = styled.div`\n  flex: 0 0 50%;\n`;\n\nexport const ControlContainer = styled.div`\n  display: flex;\n  font-size: 12px;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  height: 138px;\n`;\n\nexport const Title = styled.div`\n  font-size: 18px;\n  margin-top: 20px;\n  text-align: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Off = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 50px;\n  left: 85px\n  background-color: grey;\n  box-shadow: 0px 0px 2px 0px rgba(245,245,242,1);\n`;\nexport const On = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 50px;\n  left: 85px;\n  box-shadow: 0px 0px 2px 0px rgba(245, 245, 242, 1);\n\n  background-color: red;\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\nimport { PedalContext } from \"./context/PedalProvider\";\n\nconst Chorus = styled(Pedal)`\n  background: rgb(33, 80, 223);\n  background: linear-gradient(\n    180deg,\n    rgba(33, 80, 223, 1) 0%,\n    rgba(76, 145, 235, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst ChorusPedal = props => {\n  const { state, dispatch } = useContext(PedalContext);\n\n  return (\n    <Chorus>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            name={\"delay\"}\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"chorus\",\n                pot: \"delayTime\",\n                value: event\n              })\n            }\n            min={0}\n            max={5}\n            step={0.1}\n            value={state.chorus.delayTime}\n          />\n          Delay\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"chorus\",\n                pot: \"depth\",\n                value: event\n              })\n            }\n            min={0}\n            max={5}\n            step={0.1}\n            value={state.chorus.depth}\n          />\n          Depth\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            name={\"frequency\"}\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"chorus\",\n                pot: \"frequency\",\n                value: event\n              })\n            }\n            min={0}\n            max={5}\n            step={0.1}\n            value={state.chorus.frequency}\n          />\n          Frequency\n        </FlexDiv>\n      </ControlContainer>\n      <Title> Chorus </Title>\n      {state.chorus.active ? <On /> : <Off />}\n      <Toggle\n        onClick={() => dispatch({ type: \"TOGGLE_ACTIVE\", pedal: \"chorus\" })}\n      />\n    </Chorus>\n  );\n};\n\nexport default ChorusPedal;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\nimport { PedalContext } from \"./context/PedalProvider\";\n\nconst Overdrive = styled(Pedal)`\n  background: rgb(186, 18, 18);\n  background: linear-gradient(\n    180deg,\n    rgba(186, 18, 18, 1) 0%,\n    rgba(235, 76, 76, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst OverdrivePedal = props => {\n  const { dispatch, state } = useContext(PedalContext);\n\n  return (\n    <Overdrive>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"overdrive\",\n                pot: \"distortion\",\n                value: event\n              })\n            }\n            min={0.1}\n            max={3}\n            step={0.1}\n            value={state.overdrive.distortion}\n          />\n          Gain\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Overdrive</Title>\n      {state.overdrive.active ? <On /> : <Off />}\n      <Toggle\n        onClick={() => dispatch({ type: \"TOGGLE_ACTIVE\", pedal: \"overdrive\" })}\n      />\n    </Overdrive>\n  );\n};\n\nexport default OverdrivePedal;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\nimport { PedalContext } from \"./context/PedalProvider\";\n\nconst Reverb = styled(Pedal)`\n  background: rgb(73, 72, 72);\n  background: linear-gradient(\n    357deg,\n    rgba(73, 72, 72, 1) 0%,\n    rgba(33, 33, 33, 1) 100%\n  );\n`;\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst ReverbPedal = props => {\n  const { dispatch, state } = useContext(PedalContext);\n\n  return (\n    <Reverb>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"reverb\",\n                pot: \"wet\",\n                value: event\n              })\n            }\n            min={0}\n            max={1}\n            step={0.01}\n            value={state.reverb.wet}\n          />\n          Dry/Wet\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"reverb\",\n                pot: \"roomSize\",\n                value: event\n              })\n            }\n            min={0}\n            max={1}\n            step={0.01}\n            value={state.reverb.roomSize}\n          />\n          Decay\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Reverb</Title>\n      {state.reverb.active ? <On /> : <Off />}\n      <Toggle\n        onClick={() => dispatch({ type: \"TOGGLE_ACTIVE\", pedal: \"reverb\" })}\n      >\n        {\" \"}\n      </Toggle>\n    </Reverb>\n  );\n};\n\nexport default ReverbPedal;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\nimport { PedalContext } from \"./context/PedalProvider\";\n\nconst Delay = styled(Pedal)`\n  background: rgb(0, 71, 24);\n  background: linear-gradient(\n    0deg,\n    rgba(0, 71, 24, 1) 0%,\n    rgba(9, 34, 0, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst DelayPedal = props => {\n  const { dispatch, state } = useContext(PedalContext);\n\n  return (\n    <Delay>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"delay\",\n                pot: \"delayTime\",\n                value: event\n              })\n            }\n            min={0}\n            max={1}\n            step={0.1}\n            value={state.delay.delayTime}\n          />\n          Delay Time\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"delay\",\n                pot: \"feedback\",\n                value: event\n              })\n            }\n            min={0}\n            max={1}\n            step={0.1}\n            value={state.delay.feedback}\n          />\n          Feedback\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"delay\",\n                pot: \"wet\",\n                value: event\n              })\n            }\n            min={0}\n            max={1}\n            step={0.01}\n            value={state.delay.wet}\n          />\n          Dry/Wet\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Ping-Pong</Title>\n      {state.delay.active ? <On /> : <Off />}\n      <Toggle\n        onClick={() => dispatch({ type: \"TOGGLE_ACTIVE\", pedal: \"delay\" })}\n      />\n    </Delay>\n  );\n};\n\nexport default DelayPedal;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport knob from \"react-touch-knob\";\nimport \"./Knob.css\";\nimport Pedal from \"./Pedal\";\nimport Toggle from \"./Toggle\";\nimport { FlexDiv, ControlContainer, Title } from \"./Layout\";\nimport { On, Off } from \"./Led\";\nimport { PedalContext } from \"./context/PedalProvider\";\n\nconst AutoWah = styled(Pedal)`\n  background: rgb(55, 0, 60);\n  background: linear-gradient(\n    176deg,\n    rgba(55, 0, 60, 1) 0%,\n    rgba(31, 0, 34, 1) 100%\n  );\n`;\n\nconst Knob = styled(knob)`\n  width: 10px;\n`;\n\nconst WahPedal = props => {\n  const { dispatch, state } = useContext(PedalContext);\n\n  return (\n    <AutoWah>\n      <ControlContainer>\n        <FlexDiv>\n          <Knob\n            name={\"delay\"}\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"wah\",\n                pot: \"baseFrequency\",\n                value: event\n              })\n            }\n            min={1}\n            max={200}\n            step={1}\n            value={state.wah.baseFrequency}\n          />\n          Freq\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            name={\"octave\"}\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"wah\",\n                pot: \"octaves\",\n                value: event\n              })\n            }\n            min={1}\n            max={8}\n            step={1}\n            value={state.wah.octaves}\n          />\n          Octaves\n        </FlexDiv>\n        <FlexDiv>\n          <Knob\n            name={\"sensitivity\"}\n            class={\"my-knob-class\"}\n            onEnd={event =>\n              dispatch({\n                type: \"SET_POT\",\n                pedal: \"wah\",\n                pot: \"sensitivity\",\n                value: event\n              })\n            }\n            min={-40}\n            max={0}\n            step={1}\n            value={state.wah.sensitivity}\n          />\n          Sensitivity\n        </FlexDiv>\n      </ControlContainer>\n      <Title>Auto-Wah</Title>\n      {state.wah.active ? <On /> : <Off />}\n      <Toggle\n        onClick={() => dispatch({ type: \"TOGGLE_ACTIVE\", pedal: \"wah\" })}\n      />\n    </AutoWah>\n  );\n};\n\nexport default WahPedal;\n","import React from \"react\";\nimport \"./App.css\";\nimport Player from \"./Player\";\nimport PedalProvider from \"./context/PedalProvider\";\nimport Title from \"./Title\";\nimport styled from \"styled-components\";\nimport Chorus from \"./Chorus\";\nimport Overdrive from \"./Overdrive\";\nimport Reverb from \"./Reverb\";\nimport Delay from \"./Delay\";\nimport Wah from \"./AutoWah\";\n\nconst Board = styled.div`\n  display: flex;\n`;\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <PedalProvider>\n          <Title />\n          <Board>\n            <Chorus />\n            <Overdrive />\n            <Delay />\n            <Reverb />\n            <Wah />\n          </Board>\n          <Player />\n        </PedalProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/feelings.75e4829b.mp3\";"],"sourceRoot":""}